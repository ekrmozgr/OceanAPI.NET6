// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OceanAPI.NET6.Data;

#nullable disable

namespace OceanAPI.NET6.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220429233150_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OceanAPI.NET6.Models.Basket", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Baskets");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Price = 0m,
                            ProductCount = 0
                        });
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.BasketProduct", b =>
                {
                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("BasketId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketProducts");

                    b.HasData(
                        new
                        {
                            BasketId = 1,
                            ProductId = 1,
                            ProductQuantity = 5
                        },
                        new
                        {
                            BasketId = 1,
                            ProductId = 2,
                            ProductQuantity = 1
                        });
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("CourseHourDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseMinuteDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CourseHourDuration = "5",
                            CourseMinuteDuration = "10",
                            DiscountPercent = 10,
                            DiscountPrice = 9m,
                            Explanation = "AAA",
                            Name = "DenemeUrun",
                            Price = 10m,
                            UserId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CourseHourDuration = "5",
                            CourseMinuteDuration = "10",
                            DiscountPercent = 10,
                            DiscountPrice = 9m,
                            Explanation = "AAA",
                            Name = "DenemeUrun",
                            Price = 10m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("ERole")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            ERole = "USER"
                        },
                        new
                        {
                            RoleId = 2,
                            ERole = "INSTRUCTOR"
                        },
                        new
                        {
                            RoleId = 3,
                            ERole = "ADMIN"
                        });
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "ekrem",
                            MobilePhone = "5076275287",
                            Name = "eko",
                            Password = "123",
                            Role = "ADMIN",
                            Surname = "ozgur"
                        });
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.Basket", b =>
                {
                    b.HasOne("OceanAPI.NET6.Models.User", "User")
                        .WithOne("Basket")
                        .HasForeignKey("OceanAPI.NET6.Models.Basket", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.BasketProduct", b =>
                {
                    b.HasOne("OceanAPI.NET6.Models.Basket", "Basket")
                        .WithMany("BasketProducts")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OceanAPI.NET6.Models.Product", "Product")
                        .WithMany("BasketProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.Product", b =>
                {
                    b.HasOne("OceanAPI.NET6.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.Basket", b =>
                {
                    b.Navigation("BasketProducts");
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.Product", b =>
                {
                    b.Navigation("BasketProducts");
                });

            modelBuilder.Entity("OceanAPI.NET6.Models.User", b =>
                {
                    b.Navigation("Basket")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
